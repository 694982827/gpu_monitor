#!/usr/bin/env python

import logging

import fire

from gpumon.influxdb.gpu_logger import start_logger


def _logger():
    return logging.getLogger(__name__)


def main(ip_or_url,
         port,
         username,
         password,
         database,
         series_name='gpu_measurements',
         polling_interval=1,
         debug=False,
         **tags):
    """ Starts GPU logger

       Logs GPU measurements to an influxdb database


       Parameters
       ----------
       ip_or_url: ip or url of influxdb
       port: A number indicating the port on which influxdb is listening
       username: Username to log into influxdb database
       password: Password to log into influxdb database
       database: Name of database to log data to. It will create the database if one doesn't exist
       series_name: Name of series/table to log data to
       tags: One or more tags to apply to the data. These can then be used to group or select timeseries
             Example: --machine my_machine --cluster kerb01

       Example
       -------
       gpumon localhost 8086 username password gpudata --machine=my_gpu_machine

       """
    logging.warning(debug)
    if bool(debug):
        logging.basicConfig(level=logging.DEBUG)
        _logger().debug('Debug logging | ON')
    else:
        logging.basicConfig(level=logging.INFO)

    try:
        t, stop_logging = start_logger(ip_or_url,
                                       port,
                                       username,
                                       password,
                                       database,
                                       series_name=series_name,
                                       polling_interval=polling_interval,
                                       **tags)
        t.join()

    except KeyboardInterrupt:
        logger =_logger()
        logger.info("Cancelling")
        logger.info("Waiting for GPU call to finish....")
    finally:
        stop_logging()

if __name__=="__main__":
    fire.Fire(main)